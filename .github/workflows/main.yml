name: Deploy to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY_PRIVATE }}

      - name: Prepare EC2 and clean Docker
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_HOST }} '
            set -e

            echo -e "\n\033[1;34m==== üîß Updating and installing packages ====\033[0m"
            sudo yum update -y
            sudo yum install -y curl jq docker awscli --allowerasing
            sudo systemctl enable --now docker
            sudo usermod -aG docker ec2-user

            # Ensure docker compose plugin is installed
            if ! docker compose version &> /dev/null; then
              echo "Installing Docker Compose plugin..."
              sudo mkdir -p /usr/local/lib/docker/cli-plugins
              sudo curl -SL "https://github.com/docker/compose/releases/latest/download/docker-compose-linux-$(uname -m)" -o /usr/local/lib/docker/cli-plugins/docker-compose
              sudo chmod +x /usr/local/lib/docker/cli-plugins/docker-compose
            fi

            echo -e "\n\033[1;34m==== üßπ Cleaning containers, images, volumes ====\033[0m"
            set +e
            docker ps -aq | xargs -r docker stop
            docker ps -aq | xargs -r docker rm -f
            docker images -aq | xargs -r docker rmi -f
            docker volume ls -q | xargs -r docker volume rm
            docker system prune -af --volumes
            set -e

            echo -e "\n\033[1;34m==== üìÇ Reset project folder ====\033[0m"
            sudo chown -R ec2-user:ec2-user /home/ec2-user/luchandoporviviryservir || true
            rm -rf /home/ec2-user/luchandoporviviryservir
          '

      - name: Rsync project to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          echo -e "\n\033[1;33m==== üì§ Rsyncing project to EC2 ====\033[0m"
          rsync -az --delete --exclude='.git' --exclude='node_modules' ./ ec2-user@${EC2_HOST}:/home/ec2-user/luchandoporviviryservir/

      - name: Start stack on EC2 (fetch DOMAIN+EMAIL, build & up)
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          echo -e "\n\033[1;33m==== ‚ñ∂Ô∏è Running remote docker compose (build + up) ====\033[0m"
          ssh -o StrictHostKeyChecking=no ec2-user@$EC2_HOST << 'EOF'
          set -xe

          cd /home/ec2-user/luchandoporviviryservir

          echo -e "\n\033[1;32m==== üîë Fetching DOMAIN + EMAIL from SSM ====\033[0m"
          DOMAIN=$(aws ssm get-parameter --name "/lpvs/DOMAIN" --with-decryption --query "Parameter.Value" --output text)
          EMAIL=$(aws ssm get-parameter --name "/lpvs/EMAIL" --with-decryption --query "Parameter.Value" --output text)

          echo -e "\033[1;36mDOMAIN: '${DOMAIN}'\033[0m"
          echo -e "\033[1;36mEMAIL: '${EMAIL}'\033[0m"

          echo -e "\n\033[1;34m==== üìÅ Preparing ACME folder ====\033[0m"
          sudo mkdir -p ./compose/deployment/acme
          sudo touch ./compose/deployment/acme/acme.json || true
          sudo chmod 600 ./compose/deployment/acme/acme.json || true

          echo -e "\n\033[1;34m==== üì¶ Building and starting containers ====\033[0m"
          DOMAIN="$DOMAIN" EMAIL="$EMAIL" sudo docker compose -f deployment.yml up --build -d

          echo -e "\n\033[1;34m==== ‚úÖ docker compose ps ====\033[0m"
          sudo docker compose -f deployment.yml ps || true

          echo -e "\n\033[1;34m==== üì¶ docker images (top 20) ====\033[0m"
          sudo docker images | head -n 20 || true

          echo -e "\n\033[1;34m==== üê≥ Recent logs (up to 200 lines) ====\033[0m"
          for svc in traefik nginx backend db; do
            echo -e "\n---- logs: $svc ----"
            sudo docker compose -f deployment.yml logs --no-color --tail=200 $svc || true
          done

          echo -e "\n\033[1;32m==== üéâ Deployment finished ====\033[0m"
          EOF
